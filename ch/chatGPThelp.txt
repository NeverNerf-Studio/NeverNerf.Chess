##Context##
Given this Quasar vue app:
.
├── LICENSE
├── README.md
├── ch
│   ├── ch_implement.sh
│   ├── ch_implement.txt
│   ├── chatGPThelp.sh
│   ├── chatGPThelp.txt
│   └── error.txt
├── index.html
├── package.json
├── postcss.config.cjs
├── public
│   ├── NeverNerfLogo.svg
│   ├── chesspieces
│   │   └── wikipedia
│   │       ├── bB.png
│   │       ├── bK.png
│   │       ├── bN.png
│   │       ├── bP.png
│   │       ├── bQ.png
│   │       ├── bR.png
│   │       ├── wB.png
│   │       ├── wK.png
│   │       ├── wN.png
│   │       ├── wP.png
│   │       ├── wQ.png
│   │       └── wR.png
│   ├── favicon.ico
│   ├── imx_metadata
│   └── passport_logo_64px.svg
├── quasar.config.js
├── src
│   ├── App.vue
│   ├── assets
│   │   └── quasar-logo-vertical.svg
│   ├── boot
│   │   ├── axios.ts
│   │   ├── i18n.ts
│   │   └── immutable.ts
│   ├── components
│   │   ├── ChessboardSVG.vue
│   │   └── PassportLoginComponent.vue
│   ├── css
│   │   ├── app.scss
│   │   └── quasar.variables.scss
│   ├── env.d.ts
│   ├── i18n
│   │   ├── en-US
│   │   │   └── index.ts
│   │   └── index.ts
│   ├── immutable.ts
│   ├── layouts
│   │   ├── CallbackLayout.vue
│   │   ├── IndexLayout.vue
│   │   ├── LoginLayout.vue
│   │   └── MainLayout.vue
│   ├── pages
│   │   ├── ErrorNotFound.vue
│   │   └── features
│   │       ├── AssetFeature.vue
│   │       ├── AssureFeature.vue
│   │       ├── CraftingFeature.vue
│   │       ├── GameplayFeature.vue
│   │       └── SettingsFeature.vue
│   ├── quasar.d.ts
│   ├── router
│   │   ├── index.ts
│   │   └── routes.ts
│   ├── shims-vue.d.ts
│   └── stores
│       ├── asset-store.ts
│       ├── example-store.ts
│       ├── index.ts
│       ├── passport-store.ts
│       └── store-flag.d.ts
└── tsconfig.json

18 directories, 59 files


And given the below files:

File: package.json
{
  "name": "nevernerf-app",
  "version": "0.0.1",
  "description": "NeverNerf",
  "productName": "NeverNerf_App",
  "author": "sgr_nz",
  "private": true,
  "scripts": {
    "lint": "eslint --ext .js,.ts,.vue ./",
    "format": "prettier --write \"**/*.{js,ts,vue,scss,html,md,json}\" --ignore-path .gitignore",
    "test": "echo \"No test specified\" && exit 0",
    "dev": "quasar dev",
    "build": "quasar build",
    "servebuild": "quasar build -d && cd dist/spa && quasar serve -H localhost -p 9000 -o"
  },
  "dependencies": {
    "@quasar/cli": "^2.3.0",
    "@quasar/extras": "^1.16.4",
    "axios": "^1.2.1",
    "chess.js": "^1.0.0-beta.7",
    "cm-chessboard": "^8.5.0",
    "events": "^3.3.0",
    "pinia": "^2.0.11",
    "quasar": "^2.6.0",
    "vue": "^3.0.0",
    "vue-i18n": "^9.2.2",
    "vue-router": "^4.0.0"
  },
  "devDependencies": {
    "@imtbl/sdk": "^0.44.4",
    "@intlify/vite-plugin-vue-i18n": "^3.3.1",
    "@quasar/app-vite": "^1.3.0",
    "@types/node": "^12.20.21",
    "@typescript-eslint/eslint-plugin": "^5.10.0",
    "@typescript-eslint/parser": "^5.10.0",
    "autoprefixer": "^10.4.2",
    "dotenv": "^16.3.1",
    "eslint": "^8.10.0",
    "eslint-config-prettier": "^8.1.0",
    "eslint-plugin-vue": "^9.0.0",
    "prettier": "^2.5.1",
    "typescript": "^4.5.4"
  },
  "engines": {
    "node": "^20 || ^16 || ^14.19",
    "npm": ">= 6.13.4",
    "yarn": ">= 1.21.1"
  }
}

File: src/pages/features/GameplayFeature.vue
<template>
  <div v-if="assetStore?.imx?.metadata" class="q-pa-md flex flex-center">
    <div class="text-center" style="max-width: 100%">
      <h4>Gameplay</h4>
      <div class="text-h5 q-my-md">{{ assetStore.imx.metadata.name }}</div>
      <!-- Adjusted for cm-chessboard -->
      <div ref="boardElement" style="width: 300px; margin: 0 auto"></div>
      <h5>{{ game.turn() === 'w' ? 'White' : 'Black' }}'s turn</h5>
      <div class="text-caption">{{ game.fen() }}</div>
      <div class="text-caption">Check: {{ game.in_check() }}</div>
      <div class="text-caption">Checkmate: {{ game.in_checkmate() }}</div>
    </div>
  </div>
</template>

<script setup>
import { Chess } from 'chess.js'; // Import chess.js
import { onMounted, ref, computed } from 'vue';
import { useRoute } from 'vue-router';
import { useAssetStore } from 'src/stores/asset-store';
import 'cm-chessboard/assets/chessboard.css';
import { Chessboard } from 'cm-chessboard';

const boardElement = ref(null);
const game = new Chess();
const assetStore = useAssetStore();
const token_id = computed(() => useRoute().params.token_id);

onMounted(() => {
  assetStore
    .loadMetadata(token_id.value)
    .then(() => {
      if (assetStore.imx.metadata.FEN) {
        game.load(assetStore.imx.metadata.FEN);
        if (!boardElement.value) return;
        new Chessboard(boardElement.value, {
          position: game.fen(),
          style: { cssClass: 'default', showCoordinates: true }, // adjust as needed
          responsive: true, // for responsiveness
        });
      }
    })
    .catch((error) => console.error(error));
});
</script>

File: src/components/ChessboardSVG.vue
<template>
  <div v-if="asset?.imx?.metadata" class="q-pa-md">
    <div ref="boardElement"></div>
  </div>
</template>

<script setup>
import 'cm-chessboard/assets/chessboard.css';
import { Chessboard, FEN } from 'cm-chessboard/src/Chessboard.js';

import { watch, ref, onMounted, computed } from 'vue';
import { useAssetStore } from 'src/stores/asset-store';
import { useRoute } from 'vue-router';

const token_id = computed(() => useRoute().params.token_id);
const assetStore = useAssetStore();
const asset = computed(() => assetStore);

const boardElement = ref(null); // The div tag above
const board = ref(null); // The cm-chessboard instance

watch(boardElement, (readyBoard) => {
  if (readyBoard && !board.value) {
    board.value = new Chessboard(boardElement.value, {
      assetsUrl: 'node_modules/cm-chessboard/assets/',
    });
    board.value.setPosition(asset.value.imx.metadata.FEN || FEN.start, true);
  }
});

watch(
  () => asset.value?.imx?.metadata?.FEN,
  (newFEN) => {
    console.log('NewFen:' + newFEN);
    if (newFEN && board.value) {
      board.value.setPosition(newFEN, true);
    }
  },
  { immediate: true }
);

onMounted(() => {
  assetStore.loadMetadata(token_id.value);
});
</script>


##Task##
Refactor GameplayFeature.vue to use cm-chessboard the same way ChessboardSVG.vue does.

##Instructions##
As a world class full stack Quasar developer:
The project is written in TypeScript, avoid eslint issues e.g. Unexpected any. Specify a different type.eslint@typescript-eslint/no-explicit-any
Your task is to think step by step and provide specific code changes that are production ready.
You will be penalized if you skip steps, add placeholders or TODOs for other developers.
If that's not possible then you MUST write code that will test and provide you additional information needed to understand the problem better.
I'm going to tip $400 for a better solution!
